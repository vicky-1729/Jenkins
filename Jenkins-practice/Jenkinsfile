pipeline {
    agent {
        label 'AGENT-1'
    }
    
    environment {
        APP_NAME = 'roboshop'
        COURSE = 'jenkins'
    }
    
    options {
        disableConcurrentBuilds()
        retry(2)
    }

    parameters {
        choice(name: 'ENVIRONMENT', choices: ['dev', 'stage', 'prod'], description: 'Select environment')
        booleanParam(name: 'RUN_TESTS', defaultValue: true, description: 'Run tests?')
        string(name: 'BRANCH_NAME', defaultValue: 'main', description: 'Git branch')
    }


    stages {
        stage('Build') {
            steps {
                script {
                    echo "Building ${APP_NAME}"
                    echo "Environment: ${params.ENVIRONMENT}"
                    echo "Branch: ${params.BRANCH_NAME}"
                    
                    withAWS(credentials: 'AWS_CRED', region: 'us-east-1') {
                        sh 'aws s3 ls'
                    }
                }
            }
        }
        
        stage('Approval') {
            steps {
                input(
                    message: 'Proceed with deployment?',
                    ok: 'Deploy',
                    submitter: 'admin'
                )
            }
        }
        
        stage('Testing') {
            when { params.RUN_TESTS }
            steps {
                echo "Running tests..."
                sh '''
                    echo "Running unit tests"
                    echo "Running integration tests"
                    echo "All tests passed"
                '''
            }
        }


        
        stage('Deploy') {
            steps {
                withAWS(credentials: 'AWS_CRED', region: 'us-east-1') {
                    sh '''
                        echo "Deploying to ${ENVIRONMENT} environment..."
                        echo "Deployment completed successfully"
                    '''
                }
            }
        }
        stage('Code Push') {
            steps {
                echo 'Pushing to git repository...'
                sh '''
                    echo "Git operations..."
                    echo "Code pushed successfully"
                '''
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
        always {
            echo 'Pipeline finished'
        }
    }
}